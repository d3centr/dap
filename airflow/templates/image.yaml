apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-image-build
  annotations:
    argocd.argoproj.io/hook: PreSync
    helm.sh/hook-weight: "-1"
    helm.sh/hook-delete-policy: before-hook-creation
spec:
  template:
    metadata:
      name: {{ .Release.Name }}-image-build
    spec:
      restartPolicy: Never
      containers:
      - name: {{ .Release.Name }}-image-build
        image: gcr.io/kaniko-project/executor:{{ .Values.kanikoVersion }}
        args:
        - "--context=/mnt"
        - "--destination={{ .Values.airflow.defaultAirflowRepository }}:{{ .Values.airflow.airflowVersion }}"
        - "--cache=false"
        volumeMounts:
        - name: dockerfile
          mountPath: /mnt
        - name: dap
          mountPath: /.dap/cluster
        {{ range .Values.dapps }}
        - name: {{ .dapp }}
          mountPath: /.dap/pipeline
        {{ end }}
      volumes:
      - name: dockerfile
        configMap:
          name: {{ .Release.Name }}-dockerfile
      - name: dap
        secret:
          secretName: dap-deploy-key
          optional: true
          defaultMode: 0444
      {{ range .Values.dapps }}
      - name: {{ .dapp }}
        secret:
          secretName: {{ .dapp }}-deploy-key
          optional: true
          defaultMode: 0444
          items:
          - key: key
            path: {{ .dapp }}
      {{ end }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-dockerfile
  annotations:
    argocd.argoproj.io/hook: PreSync
    helm.sh/hook-weight: "-1"
    helm.sh/hook-delete-policy: before-hook-creation
data:
  Dockerfile: |
    FROM {{ .Values.airflow.defaultAirflowRepository }}:base-{{ .Values.airflow.airflowVersion }}

    {{ if .Values.hotDapBuild }}
    RUN cd dap && \
        GIT_SSH_COMMAND='ssh -o StrictHostKeyChecking=no -i /.dap/cluster/key' \
            git pull --ff-only
    {{ end }}

    {{ range .Values.dapps }}
      {{ if and (has "airflow" .apps) (eq .airflow "hot") }}

    RUN cd {{ .dapp }} && \
        GIT_SSH_COMMAND='ssh -o StrictHostKeyChecking=no -i /.dap/pipeline/{{ .dapp }}' \
            git pull --ff-only

      {{ end }}
    {{ end }}

