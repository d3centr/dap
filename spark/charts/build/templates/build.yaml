apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-builder
  annotations:
    argocd.argoproj.io/hook: {{ .Values.coldBuild }}
    helm.sh/hook-weight: "-99"
    helm.sh/hook-delete-policy: before-hook-creation
spec:
  template:
    metadata:
      name: {{ .Release.Name }}-builder
    spec:
      restartPolicy: Never
      containers:
      - name: {{ .Release.Name }}-builder
        image: gcr.io/kaniko-project/executor:latest
        args:
        - "--context=/mnt"
        - "--destination={{ .Values.global.registry }}:{{ .Values.tag }}-builder"
        - "--build-arg=KUBECTL_VERSION"
        # pass KUBECTL_VERSION from global variables
        envFrom:
        - configMapRef:
            name: env
        resources:
          requests:
            cpu: 1800m
            memory: 2900Mi
        volumeMounts:
        - name: dockerfile
          mountPath: /mnt
      volumes:
      - name: dockerfile
        configMap:
          name: {{ .Release.Name }}-cold-dockerfile
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-cold-dockerfile
  annotations:
    argocd.argoproj.io/hook: {{ .Values.coldBuild }}
    helm.sh/hook-weight: "-99"
    helm.sh/hook-delete-policy: before-hook-creation
data:
  Dockerfile: |
    FROM {{ .Values.global.registry }}:{{ .Values.baseImage }}

    USER root

    RUN apt-get update && apt-get install -y git curl unzip zip && rm -rf /var/cache/apt/* && \
        curl -s "https://get.sdkman.io" | bash

    RUN git clone --single-branch --depth 1 --branch {{ .Values.branch }} {{ .Values.repo }}

    ARG KUBECTL_VERSION
    ARG URL=https://repo1.maven.org/maven2
    RUN source /root/.sdkman/bin/sdkman-init.sh && cd dap/spark && \
        sdk install sbt `awk '$3=="sbtVersion" && $4==":=" {print $5}' build.sbt | tr -d '"'` && \
        ln -s /opt/spark/jars lib && \

    {{ if eq .Release.Name "sparkubi" }}
        curl -LO https://dl.k8s.io/release/v$KUBECTL_VERSION/bin/linux/amd64/kubectl && \
        install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl && rm kubectl && \

    {{ else if eq .Release.Name "uniswap" }}
        mkdir -p {{ .Release.Name }}/target/scala-{{ .Values.scalaVersion }} && \
        cd {{ .Release.Name }}/target/scala-{{ .Values.scalaVersion }} && \

        cp /opt/spark/jars/sparkubi.jar . && \

        {{- /* spark-sql-kafka */}}
        curl -O $URL/org/apache/spark/spark-sql-kafka-0-10_2.12/3.2.0/spark-sql-kafka-0-10_2.12-3.2.0.jar && \

        {{- /* spark-sql-kafka Compile Dependencies */}}
        curl -O $URL/org/apache/kafka/kafka-clients/2.8.0/kafka-clients-2.8.0.jar && \
        curl -O $URL/org/apache/spark/spark-token-provider-kafka-0-10_2.12/3.2.0/spark-token-provider-kafka-0-10_2.12-3.2.0.jar && \
        curl -O $URL/org/apache/spark/spark-tags_2.12/3.2.0/spark-tags_2.12-3.2.0.jar && \
        curl -O $URL/org/apache/commons/commons-pool2/2.6.2/commons-pool2-2.6.2.jar && \
        curl -O $URL/com/google/code/findbugs/jsr305/3.0.0/jsr305-3.0.0.jar && \

        cd - && \
    {{ end }}

        sbt {{ .Release.Name }}/package
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-build
  annotations:
    argocd.argoproj.io/hook: {{ .Values.hotBuild }}
    helm.sh/hook-weight: "-98"
    helm.sh/hook-delete-policy: before-hook-creation
spec:
  template:
    metadata:
      name: {{ .Release.Name }}-build
    spec:
      restartPolicy: Never
      containers:
      - name: {{ .Release.Name }}-build
        image: gcr.io/kaniko-project/executor:latest
        args:
        - "--context=/mnt"
        - "--destination={{ .Values.global.registry }}:{{ .Values.tag }}"
        resources:
          requests:
            cpu: 1200m
            memory: 1800Mi
        volumeMounts:
        - name: dockerfile
          mountPath: /mnt
      volumes:
      - name: dockerfile
        configMap:
          name: {{ .Release.Name }}-hot-dockerfile
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-hot-dockerfile
  annotations:
    argocd.argoproj.io/hook: {{ .Values.hotBuild }}
    helm.sh/hook-weight: "-98"
    helm.sh/hook-delete-policy: before-hook-creation
data:
  Dockerfile: |
    FROM {{ .Values.global.registry }}:{{ .Values.tag }}-builder AS build

    RUN cd dap/spark && git pull && \
        source /root/.sdkman/bin/sdkman-init.sh && sbt {{ .Release.Name }}/package

    FROM {{ .Values.global.registry }}:dep
    COPY --from=build /opt/spark/work-dir/dap/spark/{{ .Release.Name }}/target/scala-{{ .Values.scalaVersion }}/*.jar /opt/spark/jars/

